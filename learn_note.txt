1.对应廖老师官网上的分支管理策略的最后一个图。
以前的理解是，比如两个人均在dev上开了一个feature分支，同时修改了同一个文件。
当第一个人把他修改的之后的feature合并到dev之后，第二个人再合并的时大概率(或者说必然)
产生合并冲突，此时就只能人工去处理冲突，那这个分布式的版本控制就没用了。

后来经过试验理解为：应该两个人再dev上各创建了一个feature之后，修改的不是同一个内容，
这样，第一个人合并之后，第二个人再去合并就没有冲突了。我觉得实际工作中应该也是这样的！！！！